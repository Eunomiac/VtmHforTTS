local U = require("utilities")
local G = require("guids")
local Z = require("zones")

local BGE = {}

local function parseAnkhPos(ankhObj)
	local stringPos = ankhObj.getDescription()
	stringPos = string.sub(stringPos,2,#stringPos-1)
	local coords = U.split(stringPos, ",")
	return {x = coords[1], y = coords[2], z = coords[3]}
end

function BGE.sendAnkhHome(ankhObj)
	ankhObj.setPositionSmooth(parseAnkhPos(ankhObj))
	ankhObj.setRotationSmooth({x = 13, y = 180, z = 180})
end

function BGE.countCityAnkhs(dir)
	local cityZone = getObjectFromGUID(G.zones.bgEZones[dir])
	return #Z.getTaggedZoneObjects(cityZone, {dir})
end

function BGE.getBurnedAnkhs(dir)
	local fireZone = getObjectFromGUID(G.zones.bgEZones.Fire)
	local ankhObjs = U.filter(fireZone.getObjects(), function(obj) return obj.hasTag(dir) end)
	-- log({burnedAnkhs = ankhObjs})
	return ankhObjs
end

function BGE.countBurnedAnkhs(dir) return #BGE.getBurnedAnkhs(dir) end

function BGE.getUnburnedAnkhs(dir)
	local burnedGUIDs = U.map(BGE.getBurnedAnkhs(dir), function(ankhObj) return ankhObj.guid end)
	return U.filter(getObjectsWithAllTags({"Ankh", dir}), function(ankhObj)
		return not U.isIn(ankhObj.guid, burnedGUIDs)
	end)
end

function BGE.burnAnkh(ankhObj)
	local burnPos = {
		x = G.tableSpots.anarchFire.x + math.random(-120, 120) / 100,
		y = G.tableSpots.anarchFire.y,
		z = G.tableSpots.anarchFire.z + math.random(-120, 120) / 100
	}
	local burnRot = {
		x = 0,
		y = 180 + math.random(-30, 30),
		z = 180
	}

	ankhObj.highlightOn({1,0,0}, 5)
	ankhObj.setPositionSmooth(burnPos)
	ankhObj.setRotation(burnRot)
end





return BGE