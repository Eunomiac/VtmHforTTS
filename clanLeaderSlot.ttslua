local U = require("utilities")
local C = require("constants")
local G = require("guids")
local M = require("main")
local clanLeaderSlot = {}

local _playerColor = nil
local _stagingPos = nil

local isSelecting = false

function clanLeaderSlot.onLoad(thisObj)
	for _, tag in pairs(thisObj.getTags()) do
		if (tag == "Red" or tag == "Yellow" or tag == "Blue") then
			_playerColor = tag
			break
		end
	end
	_stagingPos = thisObj.getPosition()
	_stagingPos.z = _stagingPos.z + 3
end

function clanLeaderSlot.onCollisionEnter(collision_info)
	if (isSelecting) then return end
	local round, turn = M.getRoundAndTurn()
	if (round ~= 0) then return end
	if (M.getNextPlayer() ~= _playerColor) then return end
	local colObj = collision_info.collision_object
	if not colObj.hasTag("ClanToken") then return end
	isSelecting = true
	Wait.time(function() isSelecting = false end, 0.5)
	return HandleClanToken(collision_info)
end

function HandleClanToken(collision_info)
	local colObjName = collision_info.collision_object.getName()
	local clanName = string.gsub(colObjName, " Clan Token", "")
	self.addTag(clanName)
	SetupPlayerSpace(_playerColor, clanName, collision_info.collision_object)
end

function SetupPlayerSpace(color, clan, politicsToken)
	local waitTime = 0

	local guids = G.playerSpaces[color]
	local mainStorage = getObjectFromGUID(G.mainStorage.id)
	local clanStorageGUID = G.mainStorage.clanStorage[clan]
	local stagingPositions = {
		Red = { x = -51.5, y = -0.14, z = 33.5 },
		Yellow = { x = -51.5, y = -0.14, z = 30.5 },
		Blue = { x = -51.5, y = -0.14, z = 27.5 }
	}
	local leaderPos = getObjectFromGUID(guids.leaderCard).getPosition()
	leaderPos.y = leaderPos.y + 1
	local positions = {
		clanLeader = leaderPos,
		clanScheme = getObjectFromGUID(guids.schemeDeck).getPosition(),
		clanMorality = G.tableSpots.clanMorality[color],
		clanPolitics = G.tableSpots.clanPolitics[color],
		clanBoons = {
			x = leaderPos.x + 1,
			y = leaderPos.y,
			z = leaderPos.z - 1
		}
	}
	positions.clanLeader.y = positions.clanLeader.y + 0.5
	positions.clanScheme.y = positions.clanScheme.y + 0.5
	positions.clanMorality.y = positions.clanMorality.y + 0.5
	positions.clanPolitics.y = positions.clanPolitics.y + 0.5

	positions.powerTokens = {
		{
			x = positions.clanLeader.x + 0.1,
			y = positions.clanLeader.y + 2,
			z = positions.clanLeader.z - 0.1
		},
		{
			x = positions.clanLeader.x - 0.1,
			y = positions.clanLeader.y + 2,
			z = positions.clanLeader.z - 0.1
		},
		{
			x = positions.clanLeader.x,
			y = positions.clanLeader.y + 2,
			z = positions.clanLeader.z + 0.1
		}
	}

	local powerBox = getObjectFromGUID(G.tokenSources.power);

	M.setHighlighter("TurnIndicator", "inactive", color)
	politicsToken.setPosition(positions.clanPolitics)
	politicsToken.setScale({ x = 0.24, y = 1, z = 0.24 })

	-- Extract clan box from main storage
	mainStorage.takeObject({
		guid = clanStorageGUID,
		position = stagingPositions[color],
		smooth = false,
		callback_function = function(clanContainer)
			local powerTokensPlaced = 0

			local function getNextItem()
				if clanContainer.getQuantity() == 0 then
					Wait.time(function()
						powerTokensPlaced = powerTokensPlaced + 1
						powerBox.takeObject({
							index = 1,
							smooth = false,
							position = positions.powerTokens[powerTokensPlaced]
						})
					end, 0.15, 3)
					return
				end
				Wait.time(function()
					clanContainer.takeObject({
						callback_function = function(spawnedObject)
							local objName = spawnedObject.getName()
							Wait.time(function()
								if (objName == clan .. " Morality") then
									spawnedObject.setPosition(positions.clanMorality)
									spawnedObject.setRotation({ x = 0, y = 180, z = 0 })
								elseif (objName == clan .. " Boon") then
									spawnedObject.setPosition(positions.clanBoons)
									spawnedObject.setRotation({ x = 0, y = 180, z = 0 })
									positions.clanBoons.z = positions.clanBoons.z + 1
								elseif (spawnedObject.hasTag("ClanLeader")) then
									spawnedObject.setPosition(positions.clanLeader)
									spawnedObject.setRotation({ x = 0, y = 180, z = 0 })
									positions.clanLeader.x = positions.clanLeader.x - 2.5
								elseif (spawnedObject.name == "Deck") then
									spawnedObject.setPosition(positions.clanScheme)
									spawnedObject.setRotation({ x = 0, y = 180, z = 180 })
								end
								getNextItem()
							end, 0.15)
						end
					})
				end, waitTime)
			end

			Wait.frames(function()
				M.assignClan(clan, color)
				getNextItem()
			end)
		end
	})

	-- local clanContainer = getObjectFromGUID(G.mainStorage.clanStorage[clan])

end

-- end

function populate_queue()
	local charCards = U.findOnObject(self, "Card", charQueueCast)

	local charCardData = {}
	for _, card in ipairs(charCards) do
		local cardData = {
			card = card,
			position = U.pFloat(self.positionToLocal(card.getPosition()).x),
			facing = "FaceDown"
		}
		if (card.getRotation().z < 90) then
			cardData.facing = "FaceUp"
		end
		cardData.snapSlot = U.findSnapPoint(charQueueSnapPoints, { x = cardData.position, z = nil })
		table.insert(charCardData, cardData)
	end

	local function cardPosCompare(a, b) return a.position < b.position end

	table.sort(charCardData, cardPosCompare)

	local waitTime = 0
	local curSlot = 5

	while (curSlot > 0) do
		local thisSnapPoint = charQueueSnapPoints[curSlot]
		if (U.count(charCardData) > 0) then
			local thisCard = table.remove(charCardData, 1)
			if (thisCard.snapSlot ~= curSlot) then
				Wait.time(function() shiftCardQueue(thisCard.card.setPositionSmooth(
						self.positionToWorld(thisSnapPoint.position), false, false
					))
				end, waitTime)
				waitTime = waitTime + 0.25
			end
		else
			Wait.time(function() DealCardQueue(thisSnapPoint.position, thisSnapPoint.rotation) end, waitTime)
			waitTime = waitTime + 0.25
		end
		curSlot = curSlot - 1
	end
end

function DealCardQueue(position)
	position = self.positionToWorld(position)
	characterDeck.takeObject({
		position = position,
		flip = true
	})
end

-- Reference Card

-- Scheme Deck, Shuffle

-- Boons Laid Out

-- 3x Power

-- Clan Leader

-- Morality Token on Battleground

return clanLeaderSlot
